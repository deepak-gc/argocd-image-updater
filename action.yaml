name: 'Image tag updater - ArgoCD staging auto deployment'
description: 'Action to update image TAG in all deploy/overlays/staging/**/image.yaml e.g. gcr.io/platform-abc/consumer:TAG'
inputs:
  image-tag:
    description: 'Image tag'
    default: ${{ github.sha }}
    required: false
  update-deployment-list:
    description: 'List of deployments where image tag should be updated, by default `**` to udpate all deployments'
    default: |
      **
    required: false
    
runs:
  using: 'composite'
  steps:
    - name: Update image tag
      env:
        UPDATE_DEPLOYMENT_LIST: ${{ inputs.update-deployment-list }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        UPDATED_TAG: false
      run: |
        if [[ -n "$UPDATE_DEPLOYMENT_LIST" ]]; then
          while IFS= read -r line; do
            if [[ -n "$line" ]]; then 
               IMAGE_FILE="deploy/overlays/staging/$line/image.yaml"   
               if [ "$line" != "**" ] && [ ! -f "$IMAGE_FILE" ]; then
                  echo "Error: Failed to update $IMAGE_FILE, file doesn't exists."
                  continue
               fi  
              echo "Updating $IMAGE_FILE"
              sed -ri "s~image: (.*):(.*)~image: \1:${{env.IMAGE_TAG}}~g" "$IMAGE_FILE"
              cat $IMAGE_FILE | grep "image:"
              echo " "
            fi            
          done <<< "$UPDATE_DEPLOYMENT_LIST"
            
          if [[ ! -z $(git status -s) ]]   
            echo "Some changes"
            echo "UPDATED_TAG=true" >> $GITHUB_ENV
          fi
    
        fi
      shell: bash
    - name: Commit image update changes
      if: env.UPDATED_TAG 
      run: |
        git config --global user.name 'argocd-image-updater'
        git config --global user.email 'argocd-image-updater@users.noreply.github.com'
        git commit -am "build: automatic update of argocd deployment" -m "updated image tag to '${{env.IMAGE_TAG}}'"
        git push 
      shell: bash   
